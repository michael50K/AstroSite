---
import type { CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Pagination from "@components/Pagination.astro";
import GameCard from "@components/GameCard.tsx";
import { SITE } from "@config";

export interface Props {
  games: CollectionEntry<"games">[];
}

const response = await fetch(`https://itch.io/api/1/<API_KEY_REDACTED>/my-games`);
const { games: itchGames } = await response.json();

const gamesWithViews = Astro.props.games.map(game => {
  const itchGame = itchGames.find((g: any) => g.id === game.data.itchIoId);
  return {
    ...game,
    data: {
      ...game.data,
      views: itchGame ? itchGame.views_count : 0
    }
  };
});

gamesWithViews.sort((a, b) => (b.data.views || 0) - (a.data.views || 0));

const sortedGames = gamesWithViews.map(game => ({
  slug: game.slug,
  data: game.data
}));

const { games: sortedGamesProps } = { games: sortedGames };
---

<Layout title={`Games | ${SITE.title}`}>
  <Header activeNav="games" />
  <Main pageTitle="Games" pageDesc="All the games I've worked on">
    <ul>
      {
        sortedGamesProps.map(({slug, data}) => (
          <GameCard href={`/games/${slug}/`} frontmatter={data} />
        ))
      }
    </ul>
  </Main>

  <Footer/>
</Layout>
