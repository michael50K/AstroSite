---
import type { CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Pagination from "@components/Pagination.astro";
import GameCard from "@components/GameCard.tsx";
import { SITE } from "@config";

export interface Props {
  games: CollectionEntry<"games">[];
  title?: string;
  description?: string;
}

const sortedGames = Astro.props.games
  .sort((gameA, gameB) => {
    if (gameA.data.featured === gameB.data.featured) {
      // Ensure updateDatetime is a valid Date and get the timestamp for comparison
      return new Date(gameB.data.updateDatetime).getTime() - new Date(gameA.data.updateDatetime).getTime();
    }
    // Sort by featured, where true comes before false
    return gameB.data.featured ? 1 : -1;
  })
  .map(game => ({
    slug: game.slug,
    data: game.data
  }));

const demoGames = sortedGames.filter(game => game.data.status == "demo")

const jamGames = sortedGames.filter(game => game.data.status == "jam")
---

<Layout title={`Games | ${SITE.title}`}>
  <Header activeNav="games" />
  <Main pageTitle="Games" pageDesc="">
    <h2>Demos</h2>
    <i>Fully playable demos for the games that I'm developing</i>
    <ul>
      {
        demoGames.map(({slug, data}) => (
          <GameCard href={`/games/${slug}/`} frontmatter={data} />
        ))
      }
    </ul>
    <h2>Jams</h2>
    <i>Small creative game prototypes I've made for game jam competitions, or just to test out game ideas</i>
    <ul>
      {
        jamGames.map(({slug, data}) => (
          <GameCard href={`/games/${slug}/`} frontmatter={data} />
        ))
      }
    </ul>
  </Main>
  <Footer/>
</Layout>

<style>
  h2 {
    font-weight: bold;
    font-size: 1.5em;
  }
</style>